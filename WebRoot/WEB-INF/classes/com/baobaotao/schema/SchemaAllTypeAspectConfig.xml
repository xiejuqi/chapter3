<?xml version="1.0" encoding="UTF-8"?>
<!-- 引用Spring的多个Schema空间的格式定义文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/lang
		http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<!-- 使用Schema配置一个简单的切面 -->
	 <aop:config proxy-target-class="true">
	 	<aop:pointcut expression="target(com.baobaotao.aspectj.fun.NaiveWaiter) and execution(* greetTo(..))" id="greetToPointcut"/>
	 	
	 	<!-- 配置一个后置增强切面 -->
	 	<aop:aspect ref="adviceMethods">
			<aop:after-returning method="afterReturning" pointcut-ref="greetToPointcut"/>
		</aop:aspect>
		
		<!-- 配置一个环绕增强切面 -->
	 	<aop:aspect ref="adviceMethods">
			<aop:around method="aroundMethod" pointcut-ref="greetToPointcut"/>
		</aop:aspect>
		
		<!-- 配置一个抛出异常增强切面 -->
	 	<aop:aspect ref="adviceMethods">
			<aop:after-throwing method="afterThrowingMethod"
				 pointcut="target(com.baobaotao.aspectj.advanced.SmartSellerExceptionImpl) and execution(* checkBill(..))"
				 throwing="illegalArgumentException"
			/>
		</aop:aspect>
		
		<!-- 配置一个Final增强切面 -->
	 	<aop:aspect ref="adviceMethods">
			<aop:after method="afterMethod" pointcut="target(com.baobaotao.aspectj.fun.NaughtyWaiter) and execution(* greetTo(..))"/>
		</aop:aspect>
		
		<aop:aspect ref="adviceMethods">
			<aop:declare-parents 
				  types-matching="com.baobaotao.aspectj.fun.Waiter+" 		
				  implement-interface="com.baobaotao.aspectj.fun.Seller" 
				  default-impl="com.baobaotao.aspectj.fun.SmartSeller"
			/>
			<!-- 
				哪些类要引介接口的实现
				要引介实现的接口
				默认的实现类
			 -->
		</aop:aspect>
		
		<!-- 通过args()函数绑定入参信息 -->
		<aop:aspect ref="adviceMethods">
			<aop:before method="bindParams" pointcut="target(com.baobaotao.aspectj.fun.NaiveWaiter) and args(name,num)"/>
		</aop:aspect>
	 </aop:config>
	
	
		
	<!-- (4)配置增强类 -->
	<bean id="adviceMethods" class="com.baobaotao.schema.AdviceMethods"/>
	
	<bean id="naiveWaiter" class="com.baobaotao.aspectj.fun.NaiveWaiter"/>
	
	<bean id="naughtyWaiter" class="com.baobaotao.aspectj.fun.NaughtyWaiter"/>
	
	<bean id="smartSellerExceptionImpl" class="com.baobaotao.aspectj.advanced.SmartSellerExceptionImpl"/>
	
	
	
	
	
	
	
</beans>
