<?xml version="1.0" encoding="UTF-8"?>
<!-- 引用Spring的多个Schema空间的格式定义文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/lang
		http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<!-- 使用Schema各种配置方式混合配置切面 -->
	
	<!-- 流程切面，基于Advisor配置的方式 -->
	<bean id="controlFlowAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut">
			<bean class="org.springframework.aop.support.ControlFlowPointcut">
				<constructor-arg type="java.lang.Class" value="com.baobaotao.advisor.WaiterDelegate"/>
				<constructor-arg type="java.lang.String" value="service"/>
			</bean>
		</property>
		<property name="advice">
			<bean class="com.baobaotao.advice.GreetingBeforeAdvice"/>
		</property>
	</bean>
	
	<!-- 使用@AspectJ方式定义的切面 -->	
	<aop:aspectj-autoproxy/>
	
	<bean class="com.baobaotao.aspectj.PreGreetingAspect"/>
	
	<!-- 使用基于Schema配置方式定义的切面 -->
	<aop:config proxy-target-class="true">
		
		<!-- 使用<aop:advisor>配置方式定义的切面 -->
		<aop:advisor advice-ref="testAdvice" pointcut="execution(* com..*.Waiter.greetTo(..))"/>
		
		<!-- 使用<aop:aspect配置方式定义的切面> -->
		<aop:aspect ref="adviceMethods">
			<aop:before method="preGreeting" pointcut="target(com.baobaotao.NaiveWaiter) and execution (* greetTo(..))"/>
		</aop:aspect>
		
	</aop:config>
	
	
		
	<!-- (4)配置增强类 -->
	
	<!-- POJO的增强类 -->
	<bean id="adviceMethods" class="com.baobaotao.schema.AdviceMethods"/>
	
	<!-- 基于特定增强接口的增强类 -->
	<bean id="testAdvice" class="com.baobaotao.schema.TestBeforeAdvice"/>
	
	<bean id="naiveWaiter" class="com.baobaotao.aspectj.fun.NaiveWaiter"/>
	
	<bean id="naughtyWaiter" class="com.baobaotao.aspectj.fun.NaughtyWaiter"/>
	
	
	
	
	
	
	
</beans>
